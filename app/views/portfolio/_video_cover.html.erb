<style type="text/css"> 
.portfolio_top_container{
  height: 315px;
}
.portfolio_user_info {
  margin-top: -49px;
}

.stage_content {
  padding-top: 101px;
}

.portfolio_sidebar {
  margin-top: 118px;
}
</style>
<div class="portfolio__top--right--video">
  <div id="player"></div>
  <%unless @user.portfolio_cover.portfolio_video.blank?%>
    <% cover_video = @user.portfolio_cover.portfolio_video%>
  <%end%>
  <%if @portfolio_restriction == "allow"%>
    <div class="portfolio__top--right__change__video primary_link_font">       
      <table align="center">
        <tr>
          <td>
            <%=link_to "Remove Video", remove_interest_path(:id=>cover_video.portfolio_cover.id)%>
          </td>
           <td></td>
          <td>|</td>
          <td></td>
          <td>
            <%= link_to image_tag("video_icon.png"), cover_video_path(:id=>@user.id),:rel=>"block"%>
          </td>
          <td></td>
          <td>|</td>
          <td></td>
          <td>
            <div id="imgButton">
              <%=form_for :coverimage,:url=>{:controller=>"portfolio",:action=>"change_cover_image",:id=>@user.id},:html=>{:multipart=>true,:id=>"change_image"} do |f|%>
                <%= f.file_field :image, :id=>"imgFile"%>
                <%= link_to image_tag("small_image_icon.png")%>
              <%end%>
            </div> 
          </td>
        </tr>
      </table>
    </div>
  <%end%>
</div>
<script>
    //Load player api asynchronously.
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    var done = false;
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '100%',
          width: '100%',
          videoId: '<%=@user.portfolio_cover.portfolio_video.vid%>',
          playerVars: { 'autoplay': 1,'showinfo': 0,'autohide': 1,'rel' : 0 },
          events: {
            'onReady': onPlayerReady,
          }
        });
    }
    function onPlayerReady(evt) {
        evt.target.playVideo();
        evt.target.mute();
    }
    function stopVideo() {
        player.stopVideo();
        player.cl
    }
</script>
